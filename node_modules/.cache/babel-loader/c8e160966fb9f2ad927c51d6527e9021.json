{"ast":null,"code":"// using local storage as data base\nconst addToDb = id => {\n  const savedData = getDb();\n  let shopping_cart = {};\n\n  if (!savedData) {\n    shopping_cart[id] = 1;\n  } else {\n    shopping_cart = JSON.parse(savedData);\n\n    if (shopping_cart[id]) {\n      return;\n    } else {\n      shopping_cart[id] = 1;\n    }\n  }\n\n  updateDb(shopping_cart);\n};\n\nconst getDb = () => localStorage.getItem(\"shopping_cart\");\n\nconst updateDb = cart => {\n  localStorage.setItem(\"shopping_cart\", JSON.stringify(cart));\n};\n\nconst removeFromDb = id => {\n  const exists = getDb();\n\n  if (!exists) {} else {\n    const shopping_cart = JSON.parse(exists);\n    delete shopping_cart[id];\n    updateDb(shopping_cart);\n  }\n};\n\nconst getStoredData = () => {\n  const exists = getDb();\n  return exists ? JSON.parse(exists) : {};\n  console.log(exists);\n};\n\nconst clearCourses = () => {\n  localStorage.removeItem(\"shopping_cart\");\n};\n\nfunction getAllSavedProducts() {\n  var products = [],\n      keys = Object.keys(localStorage),\n      i = keys.length;\n\n  while (i--) {\n    products.push(localStorage.getItem(keys[i]));\n  }\n\n  return products;\n}\n\nexport { addToDb, removeFromDb as deleteFromLocal, clearCourses as clearProducts, getStoredData, getAllSavedProducts };","map":{"version":3,"sources":["G:/CODE/Development/Projects/Frontend/project_fronend/src/LocalDb/LocalDb.js"],"names":["addToDb","id","savedData","getDb","shopping_cart","JSON","parse","updateDb","localStorage","getItem","cart","setItem","stringify","removeFromDb","exists","getStoredData","console","log","clearCourses","removeItem","getAllSavedProducts","products","keys","Object","i","length","push","deleteFromLocal","clearProducts"],"mappings":"AAAA;AACA,MAAMA,OAAO,GAAIC,EAAD,IAAQ;AACtB,QAAMC,SAAS,GAAGC,KAAK,EAAvB;AACA,MAAIC,aAAa,GAAG,EAApB;;AACA,MAAI,CAACF,SAAL,EAAgB;AACdE,IAAAA,aAAa,CAACH,EAAD,CAAb,GAAoB,CAApB;AACD,GAFD,MAEO;AACLG,IAAAA,aAAa,GAAGC,IAAI,CAACC,KAAL,CAAWJ,SAAX,CAAhB;;AACA,QAAIE,aAAa,CAACH,EAAD,CAAjB,EAAuB;AACrB;AACD,KAFD,MAEO;AACLG,MAAAA,aAAa,CAACH,EAAD,CAAb,GAAoB,CAApB;AACD;AACF;;AACDM,EAAAA,QAAQ,CAACH,aAAD,CAAR;AACD,CAdD;;AAgBA,MAAMD,KAAK,GAAG,MAAMK,YAAY,CAACC,OAAb,CAAqB,eAArB,CAApB;;AACA,MAAMF,QAAQ,GAAIG,IAAD,IAAU;AACzBF,EAAAA,YAAY,CAACG,OAAb,CAAqB,eAArB,EAAsCN,IAAI,CAACO,SAAL,CAAeF,IAAf,CAAtC;AACD,CAFD;;AAIA,MAAMG,YAAY,GAAIZ,EAAD,IAAQ;AAC3B,QAAMa,MAAM,GAAGX,KAAK,EAApB;;AACA,MAAI,CAACW,MAAL,EAAa,CACZ,CADD,MACO;AACL,UAAMV,aAAa,GAAGC,IAAI,CAACC,KAAL,CAAWQ,MAAX,CAAtB;AACA,WAAOV,aAAa,CAACH,EAAD,CAApB;AACAM,IAAAA,QAAQ,CAACH,aAAD,CAAR;AACD;AACF,CARD;;AAUA,MAAMW,aAAa,GAAG,MAAM;AAC1B,QAAMD,MAAM,GAAGX,KAAK,EAApB;AACA,SAAOW,MAAM,GAAGT,IAAI,CAACC,KAAL,CAAWQ,MAAX,CAAH,GAAwB,EAArC;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACD,CAJD;;AAMA,MAAMI,YAAY,GAAG,MAAM;AACzBV,EAAAA,YAAY,CAACW,UAAb,CAAwB,eAAxB;AACD,CAFD;;AAIA,SAASC,mBAAT,GAA+B;AAC7B,MAAIC,QAAQ,GAAG,EAAf;AAAA,MACEC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYd,YAAZ,CADT;AAAA,MAEEgB,CAAC,GAAGF,IAAI,CAACG,MAFX;;AAIA,SAAOD,CAAC,EAAR,EAAY;AACVH,IAAAA,QAAQ,CAACK,IAAT,CAAclB,YAAY,CAACC,OAAb,CAAqBa,IAAI,CAACE,CAAD,CAAzB,CAAd;AACD;;AAED,SAAOH,QAAP;AACD;;AAED,SACErB,OADF,EAEEa,YAAY,IAAIc,eAFlB,EAGET,YAAY,IAAIU,aAHlB,EAIEb,aAJF,EAKEK,mBALF","sourcesContent":["// using local storage as data base\r\nconst addToDb = (id) => {\r\n  const savedData = getDb();\r\n  let shopping_cart = {};\r\n  if (!savedData) {\r\n    shopping_cart[id] = 1;\r\n  } else {\r\n    shopping_cart = JSON.parse(savedData);\r\n    if (shopping_cart[id]) {\r\n      return;\r\n    } else {\r\n      shopping_cart[id] = 1;\r\n    }\r\n  }\r\n  updateDb(shopping_cart);\r\n};\r\n\r\nconst getDb = () => localStorage.getItem(\"shopping_cart\");\r\nconst updateDb = (cart) => {\r\n  localStorage.setItem(\"shopping_cart\", JSON.stringify(cart));\r\n};\r\n\r\nconst removeFromDb = (id) => {\r\n  const exists = getDb();\r\n  if (!exists) {\r\n  } else {\r\n    const shopping_cart = JSON.parse(exists);\r\n    delete shopping_cart[id];\r\n    updateDb(shopping_cart);\r\n  }\r\n};\r\n\r\nconst getStoredData = () => {\r\n  const exists = getDb();\r\n  return exists ? JSON.parse(exists) : {};\r\n  console.log(exists);\r\n};\r\n\r\nconst clearCourses = () => {\r\n  localStorage.removeItem(\"shopping_cart\");\r\n};\r\n\r\nfunction getAllSavedProducts() {\r\n  var products = [],\r\n    keys = Object.keys(localStorage),\r\n    i = keys.length;\r\n\r\n  while (i--) {\r\n    products.push(localStorage.getItem(keys[i]));\r\n  }\r\n\r\n  return products;\r\n}\r\n\r\nexport {\r\n  addToDb,\r\n  removeFromDb as deleteFromLocal,\r\n  clearCourses as clearProducts,\r\n  getStoredData,\r\n  getAllSavedProducts,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}